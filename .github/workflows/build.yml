name: CMake cross-platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write   # needed for release uploads

env:
  BUILD_TYPE: MinSizeRel

jobs:
  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: false
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-glew
            upx
            zip
            mingw-w64-x86_64-ccache

      - name: Configure and Build
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
          cmake --build build -j$(nproc)

      - name: Package zip for Release
        run: |
          cd build
          EXE=rawviewer.exe
          upx --best --overlay=strip "$EXE"
          DATE=$(date +%Y%m%d)
          ZIPNAME="rawviewer-windows-x86_64-${DATE}-${GITHUB_RUN_NUMBER}.zip"
          echo "ZIPNAME=$ZIPNAME" >> $GITHUB_ENV
          zip "$ZIPNAME" "$EXE"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIPNAME }}
          path: build/${{ env.ZIPNAME }}

      - name: Upload to "latest" Release
        uses: ncipollo/release-action@v1
        with:
          tag: latest
          name: Latest Build
          artifacts: build/${{ env.ZIPNAME }}
          allowUpdates: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux:
    runs-on: ubuntu-latest
    container:
      image: gcc:15   # not giving up on C++20
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            cmake ninja-build pkg-config \
            libsdl2-dev libglew-dev libgtk-3-dev \
            upx zip ccache

      - name: Configure and Build
        env:
          CC: gcc
          CXX: g++
        run: |
          gcc --version
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
          cmake --build build -j$(nproc)

      - name: Package zip for Release
        run: |
          cd build
          EXE=rawviewer
          upx --best --overlay=strip "$EXE"
          DATE=$(date +%Y%m%d)
          ZIPNAME="rawviewer-linux-x86_64-${DATE}-${GITHUB_RUN_NUMBER}.zip"
          echo "ZIPNAME=$ZIPNAME" >> $GITHUB_ENV
          zip "$ZIPNAME" "$EXE"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIPNAME }}
          path: build/${{ env.ZIPNAME }}

      - name: Upload to "latest" Release
        uses: ncipollo/release-action@v1
        with:
          tag: latest
          name: Latest Build
          artifacts: build/${{ env.ZIPNAME }}
          allowUpdates: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
